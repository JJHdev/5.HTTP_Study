1. Http헤더 - 개요 
  -. 표현헤더(http헤더)는 표현데이터(메시지바디)를 해석할 수 있는 정보를 제공한다.

2. 표현
  -. content-type : 표현데이터의 형식 
    -. 미디어타입인지? 문자인코딩인지? 
    
  -. content-Encoding: 표현데이터의 압축방식
    -. 데이터를 전달하는 곳에서 압축 후 인코딩 헤더 추가 (gzip 같이 압축방법 전달)
    
  -. content-Language: 표현데이터의 자연언어
    -. 표현 데이터의 자연 언어를 표현 (ko, en , en-Us)
  
  -. content-Length: 표현데이터의 길이
    -. 바이트 단위
    -. 전송코딩을 사용하면 content-Length 사용하면 안된다.
  
  -. 표현 헤더는 전송, 응답 둘다 사용

3. 콘텐츠 협상 (콘텐츠 네고시에이션)
  -. 클라이언트가 선호하는 표현을 요청 (헤더에 담아서) (외국사이트에 한국어 요청을 보내면 서버에서 해당 요청을 받아들여 한국어로 전달한다.)
  -. Accept-Language , Accpet-encoding , Accept, Accept-Charset

4. 전송방식
  -. 단순전송, 압축전송, 분할전송, 범위전송

5. 일반전송
  -. From 유저 에이전트의 이메일 정보
  -. Referer 이전 웹 페이지 주소 (어느곳을 통해서 왔는지 체크할수있다.)
  -. User-Aent 클라이언트의 애플리케이션 정보 (웹브라우저 정보 -> 어느 브라우저에서 장애 발생가능한지 파악 가능)
  -. Server 요청을 처리하는 Origin 서버의 소프트웨어 정보
  -. Date 메시지가 발생한 날짜와 시간

6. 특별한 정보
  -. Host -요청에서 사용, 필수값, 하나의 IP주소에 여러 도메인이 묶여있을 경우 ->  내가 요청을 보낼경우 어느 도메인(DNS)와 매칭될지 모르니 Host헤더가 있어 해결가능
    -. Host: aaa.com
  -. Location : 웹브라우저는 300응답에 Location헤더가 있으면 Location위치로 자동 이동 / (201, 300대 에서 사용가능)
  -. Allow : 허용 가능한 HTTP메서드
  -. Retry-After : 클라이언트가 다음 요청을 하기까지 기달려야 하는시간 (503) -> 언제까지 점검인지 표시해주는것

7. 인증
  -. Authorization : 클라이언트 인증 정보를 서버에 전달
  -. WWW-Authenticate : 리소스 접근시 필요한 인증 방법 정의

8. 쿠키
  -. set-Cookie : 서버에서 클라이언트로 쿠키 전달 (응답)
  -. Http는 무상태 프로토콜이다.  (쿠키로 판단할수 있다.)
  -. 쿠키의 사용처
    -. 쿠키에 sessionKey를 담아서 전송
    -. 광고 정보 트래킹
  -. 쿠키의 정보는 항상 서버에 전송됨
    -. 네트워크 트래픽 추가 유발 -> 그리하여 최소한의 정보만 사용
    -. 서버에 전송하지 않고, 웹브라우저 내부에 데이터를 저장하고 싶다면 웹스토리지(localStorage, sessionStorage) 이용
    -. 쿠키는 보안에 민감한 데이터는 저장하면 안된다. (주민번호, 신용카드번호 등등)
  -. 쿠키의 생명주기
    -. expires로 만료일, max-age로 유지시간을 설정할수 있다.
    -. 만료날짜를 생략하면 브라우저 종료시 까지만 유지
  -. 쿠키의 도메인
    -. domain=example.org >> example.org, dev.example.org 사용이 가능하다.
    -. domain을 생략할 경우 example.org에서만 사용이 가능하다.
  -. 쿠키의 경로 path=/ 해당 경로에서 하위 경로 페이지만 쿠키 접근 가능 일반적으로 루트로 지정
  -. 쿠키-보안
    -. Secure Http, Https를 구분하지않고 전송되는데 Https인 경우메만 전송되도록 한다.
    -. HttpOnly > Xss 공격 방지 (자바스크립트에서 접근 불가, HTTP 전송에만 사용)
    -. sameSite >  XSRF 공격 방지 (요청 도메인과 쿠키에 설정된 도메인이 같은 경우만 쿠키 전송가능)












