1. 모든것이 HTTP(Hyper Text Transfer Protocol)
  -. HTML, TEXT, Image, 음성, 영상, 파일, JSON, XML, API, 서버간의 데이터 전송
  -. TCP: HTTP/1.1 , HTTP/2
  -. UDP: HTTP/3

  -. 클라이언트 서버 구조
  -. 무상태 프로토콜, 비연결성
  -. HTTP메시지
  -. 단순함, 확장 가

2. 클라이언트 서버 구조
  -. Request, Response 구조
  -. 클라이언트는 서버에 요청을 보내고, 응답을 대기
  -. 서버가 요청에 대한 결과를 만들어서 응답

3. stateful, tsateless
  -. 무상태 프로토콜 (스테이스리스) stateless
  -. stateful VS stateful
    -. stateful은 노트북 얼마인지? > 2개 구매 (노트북이라고 알고있음)
    -. stateless은 노트북 얼마인지? > 2개 구매 (노트북이라는것을 모름)

  -. 즉 서버가 클라이언트의 상태 정보를 유지하지않는것 (stateless)
    -. 항상 요청으로만 온것으로만 판단한다.

  -. 상태유지 : 중간에 다른 점원으로 바뀌면 안된다.
  -. 무상태 : 중간에 다른 점원으로 바뀌어도 된다.
    -. 갑자기 고객이 증가해도 점원을 대거 투입 할수 있다.
    -. 갑자기 클라이언트 요청이 증가해도 서버를 대거 투입할 수 있다.
  -. 무상태는 응답 서버를 쉽게 바꿀 수 있다. >> 무한한 서버 증설 가능

  -. 실무 한계 (stateless)
    -. 로그인이 필요 없는 단순한 서비스 소개 화면 (무상태)
    -. 상태를 유지필요 (로그인 >> 상태를 유지해야한다.) > 브라우저의 쿠키, 세션을 사용해서 상태 유지
    -. 즉 상태 유지는 최소한만 사용해야한다. (데이터와 용량을 많이 잡아먹어서)

4. 비연결성



5. HTTP 메시
